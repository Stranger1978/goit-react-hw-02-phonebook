{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Section from './Section';\nimport { nanoid } from 'nanoid'; //import PropTypes from 'prop-types';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContact = (name, number) => {\n      const NewContact = {\n        id: nanoid(),\n        name,\n        number\n      };\n      const {\n        contacts\n      } = this.state;\n\n      if (contacts.some(contact => name.toLowerCase() === contact.name.toLowerCase())) {\n        alert(`${name} is already in contacts.`);\n        return;\n      }\n\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [NewContact, ...contacts]\n        };\n      });\n    };\n\n    this.deleteContact = id => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n\n    this.changeFilter = e => {\n      const {\n        filter\n      } = e.currentTarget;\n      this.setState({\n        filter: filter.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Phonebook\",\n        children: /*#__PURE__*/_jsxDEV(ContactForm, {\n          onSubmit: this.addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Contacts\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.filter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contactList: this.state.contacts,\n          onDelete: this.deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["React","Component","ContactForm","ContactList","Section","nanoid","App","state","contacts","id","name","number","filter","addContact","NewContact","some","contact","toLowerCase","alert","setState","deleteContact","prevState","changeFilter","e","currentTarget","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Section from './Section';\nimport { nanoid } from 'nanoid';\n//import PropTypes from 'prop-types';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n    filter: '',\n  }\n\n  addContact = (name, number) => {\n    const NewContact = {\n      id: nanoid(),\n      name,\n      number\n    };\n    const { contacts } = this.state;\n    if (contacts.some((contact) => name.toLowerCase() === contact.name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [NewContact, ...contacts],\n    }));\n  };\n\n  deleteContact = (id) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }))\n  };\n\n  changeFilter = e => {\n    const { filter } = e.currentTarget;\n    this.setState({ filter: filter.value });\n  };\n  \n  render() {\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact}/>\n        </Section>\n        <Section title=\"Contacts\">\n           <label htmlFor=\"\">Find contacts by name\n            <input type=\"text\" value={this.state.filter} />\n            </label>  \n          <ContactList contactList={this.state.contacts} onDelete={this.deleteContact} />    \n        </Section>\n    </div>    \n      );\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}