{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n    this.nameInputId = nanoid();\n    this.numberInputId = nanoid();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F\\u0406\\u0456\\u0407\\u0457\\u0490\\u0491' \\\\-\\\\u0400-\\\\u04FF]+$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: this.state.name,\n          onChange: this.handleChange,\n          id: this.nameInputId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"^[+]?[0-9\\\\\\\\.\\\\\\\\-\\\\\\\\s]{1,15}$\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          value: this.state.number,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","Component","nanoid","ContactForm","state","name","number","nameInputId","numberInputId","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACvCG,KADuC,GAC/B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAD+B;AAAA,SAMvCC,WANuC,GAMzBL,MAAM,EANmB;AAAA,SAOvCM,aAPuC,GAOvBN,MAAM,EAPiB;;AAAA,SASvCO,YATuC,GASxBC,CAAC,IAAI;AACpB,YAAM;AAAEL,QAAAA,IAAF;AAAQM,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACR,IAAD,GAAQM;AAAV,OAAd;AACD,KAZwC;;AAAA,SAevCG,YAfuC,GAexBJ,CAAC,IAAI;AACpBA,MAAAA,CAAC,CAACK,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AAEA,WAAKc,KAAL,CAAWC,QAAX,CAAoB,KAAKf,KAAzB;AACA,WAAKgB,KAAL;AACC,KArBsC;;AAAA,SAuBvCA,KAvBuC,GAuB/B,MAAM;AACd,WAAKP,QAAL,CAAc;AAACR,QAAAA,IAAI,EAAE,EAAP;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OAAd;AACC,KAzBsC;AAAA;;AA2B1Ce,EAAAA,MAAM,GAAG;AACL,wBACC;AAAM,MAAA,QAAQ,EAAE,KAAKP,YAArB;AAAA,8BACE;AAAA,+BACE;AACG,UAAA,IAAI,EAAC,MADR;AAEG,UAAA,IAAI,EAAC,MAFR;AAGG,UAAA,OAAO,EAAC,+FAHX;AAIG,UAAA,KAAK,EAAC,wIAJT;AAKG,UAAA,QAAQ,MALX;AAMG,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,IANrB;AAOG,UAAA,QAAQ,EAAE,KAAKI,YAPlB;AAQG,UAAA,EAAE,EAAG,KAAKF;AARb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAC,kCAHV;AAIE,UAAA,KAAK,EAAC,8FAJR;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,MANpB;AAOE,UAAA,QAAQ,EAAE,KAAKG;AAPjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF,eAwBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AA4BF;;AAxDwC","sourcesContent":["import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nexport class ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n\n    nameInputId = nanoid();\n    numberInputId = nanoid();\n\n    handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n    \n    handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n  \n    this.props.onSubmit(this.state);\n    this.reset();\n    };\n    \n    reset = () => {\n    this.setState({name: '', number: ''});\n    };\n    \n render() {\n     return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <input\n             type=\"text\"\n             name=\"name\"\n             pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n             required\n             value={this.state.name}\n             onChange={this.handleChange}\n             id={ this.nameInputId}         \n          />\n        </label>\n        <label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"^[+]?[0-9\\\\.\\\\-\\\\s]{1,15}$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type='button'>Add contact</button>\n    </form>\n      );\n  };\n\n    \n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}